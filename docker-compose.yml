version: '3.8'

services:
  httpsserver:
    build: .
    container_name: httpsserver
    ports:
      - "18443:18443"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=httpsserver
      - DB_PASSWORD=httpsserver123
      - DB_DATABASE=httpsserver
      - CLIENT_ID=eplat
      - CLIENT_SECRET=eplat2019111214440
      - SERVER_PORT=18443
      - CERT_FILE=/app/certs/server.crt
      - KEY_FILE=/app/certs/server.key
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./certs:/app/certs
      - ./logs:/app/logs
    networks:
      - httpsserver-network
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    container_name: httpsserver-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root123456
      MYSQL_DATABASE: httpsserver
      MYSQL_USER: httpsserver
      MYSQL_PASSWORD: httpsserver123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql/database.sql:/docker-entrypoint-initdb.d/database.sql
    networks:
      - httpsserver-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  adminer:
    image: adminer
    container_name: httpsserver-adminer
    ports:
      - "8080:8080"
    depends_on:
      - mysql
    networks:
      - httpsserver-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: httpsserver-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/etc/nginx/certs
    depends_on:
      - httpsserver
    networks:
      - httpsserver-network
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  httpsserver-network:
    driver: bridge 